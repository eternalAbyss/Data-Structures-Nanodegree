Title
-----
BigO Analysis of the solutions


Task 0
------
worst case time complexity is : O(1)
The time complexity of this program is o(1) since we are accessing the
first and the last value from the list (calls and text) using index.

Task 1
------
worst case time complexity is : o(n)
The time complexity of this program is O(n) since we are using a loop of complexity O(n)
for inserting the phone numbers of outgoing and incoming text records.
Similarly, we are using another loop to insert the phone numbers of outgoing
and incoming text records which is of complexity O(n).
This gives us the cumulative complexity O(n + n) which can also be written as
O(2n).
Since we can neglect the constant part in the big O notation, this can finally
be written as O(n)

Task 2
------
worst case time complexity is : o(n)
The time complexity of this program is O(n) since we are using a loop of complexity O(n)
for inserting the phone numbers and durations of outgoing and incoming call
records.
Also, we have used the built-in max function which is of complexity O(n) which
gives the final complexity O(n + n), which is O(2n).
Since we can neglect the constant part in the big O notation, this can finally
be written as O(n)

Task 3
------
worst case time complexity is : o(n log n)
The time complexity of this program is O(n log n) since we are using 4 loops
to get the numbers that are from Bangalore O(n), then to get area codes of all
the numbers that received calls from Bangalore (O(n)), to print the area codes
(O(n)) and finally to fetch numbers that are from Bangalore and received a call
from Bangalore which gives a cumulative complexity of O(n+n+n+n), i.e. O(4n).
Finally, we use sorted method to print the codes in lexicographical manner which
is of complexity O(n log n), which makes the complexity to be O(4n + n log n).
Since, 4n can be considered as n and n log n > n we have the final complexity
as O(n log n).

Task 4
------
Similar to Task 3 we use 4 loops here of complexity O(n) which gives complexity
of O(4n) and a sorted method of complexity O(n log n) the cumulative complexity
can be written as O(4n + n log n).
Since, 4n can be considered as n and n log n > n we have the final complexity
as O(n log n).
